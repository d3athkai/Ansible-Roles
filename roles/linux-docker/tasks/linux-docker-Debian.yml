---
  ###
  ###
  # SETUP DOCKER FOR Debian / Raspberry Pi: https://docs.docker.com/engine/install/debian/
  ###
  ###
  - name: Install packages to allow apt to use a repository over HTTPS
    ansible.builtin.apt:
      name:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      state: latest
      update_cache: true
      autoclean: true

  - name: Add Dockerâ€™s official GPG key
    ansible.builtin.apt_ke:
      url: https://download.docker.com/linux/debian/gpg
      keyring: /usr/share/keyrings/docker-archive-keyring.gpg
      state: present

  - name: Get DEB architecture
    ansible.builtin.shell: dpkg --print-architecture
    args:
      executable: /bin/bash
    register: deb_architecture

  - name: Add Docker's stable Repository
    ansible.builtin.apt_repository:
      repo: deb [arch={{ deb_architecture.stdout }} signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable
      state: present
      filename: "docker"

  - name: Install Docker Engine
    ansible.builtin.apt:
      name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      state: latest
      update_cache: true
      autoclean: true

  - name: Enable and Start Docker service
    systemd:
      state: started
      name: docker
      enabled: true


  - name: Filter system logs for mount succeeded entries
    ansible.builtin.template:
      src: 01-blocklist.conf.j2
      dest: /etc/rsyslog.d/01-blocklist.conf
      owner: root
      group: root
      mode: '0640'

  - name: Restart rsyslog service
    ansible.builtin.systemd:
      state: restarted
      name: rsyslog
      enabled: yes


  - name: Configure Docker /etc/docker/daemon.json
    ansible.builtin.template:
      src: daemon.json.j2
      dest: /etc/docker/daemon.json
      owner: root
      group: root
      mode: '0644'

  - name: Restart Docker service
    ansible.builtin.systemd:
      state: restarted
      name: docker
      enabled: true


  - name: Get Docker version
    ansible.builtin.shell: docker --version
    register: docker_version

  - name: Show Docker version
    ansible.builtin.debug: msg="{{ docker_version.stdout_lines }}"


  - name: Test ping to google.com with busybox image
    ansible.builtin.shell: docker run --rm -it busybox:latest ping google.com -c 3 && docker rmi busybox:latest
    args:
      executable: /bin/bash
    register: busybox_ping

  - name: Show busybox ping result
    ansible.builtin.debug: msg="{{ busybox_ping.stdout_lines }}"
